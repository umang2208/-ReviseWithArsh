// question link:- https://practice.geeksforgeeks.org/problems/deee0e8cf9910e7219f663c18d6d640ea0b87f87/1/#

class Solution{
  public:
    vector<int> max_of_subarrays(vector<int> arr, int n, int k) {
        // using sliding window technique for this quesiton
        
        deque<int> dq;
        vector<int> ans;
        int var1=0;
        int i;
        
        //first find the max in k size subarray
        for( i=0;i<k;i++){
            while(!dq.empty() and arr[i]> arr[dq.back()])
                dq.pop_back();
            dq.push_back(i);
        }
        
       //now begin the process for whole array
       for(;i<n;i++){
           
           
           ans.push_back(arr[dq.front()]);
           //check size of array is equals to k if it is greater remove from front
           while(!dq.empty() and dq.front()<= i-k)
            dq.pop_front();
            
            //set greater element into the array to its correct position
           while(!dq.empty() and arr[i]>=arr[dq.back()])
                dq.pop_back();
                
            dq.push_back(i);
       }
       ans.push_back(arr[dq.front()]);
        return ans;
    }
};
